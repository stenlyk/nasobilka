{"version":3,"sources":["Start.js","Quiz.js","Root.js","App.js","serviceWorker.js","index.js"],"names":["Start","props","state","num","skils","nas","del","checked","this","selected","indexOf","key","className","type","name","value","id","onChange","htmlFor","val","console","log","onSubmit","map","renderNumber","Object","keys","renderSkils","React","Component","Quiz","initialState","index","generateQuestion","event","setState","preventDefault","answers","position","Number","target","questions","wrong","length","q","timeout","submited","date","Date","toISOString","slice","evaluate","lsCorrect","reactLocalStorage","getObject","push","setObject","correctAnswer","correctAnswerState","corect","getCorrectAnswer","lsWrong","setTimeout","done","question","answer","method","side","num1","num2","first","sides","methods","usedQuestions","Math","floor","random","renderMultiplication","renderDivade","min","max","step","required","autoFocus","e","handleChange","total","w","renderViewMultiplication","renderViewDivade","countQ","countW","renderWrong","onClick","reload","progress","progressWrong","renderSummary","role","style","width","handleSubmit","autoComplete","renderQuestion","Root","error","splice","stat","nasArray","delArray","class","i","correct","statsC","statsW","elm","renderStat","renderQuiz","renderStart","renderStats","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.30e1def9.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class Start extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      num: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n      skils: { nas: \"Násobení\", del: \"Dělení\" },\n    };\n  }\n\n  renderNumber(num) {\n    const checked = this.props.selected.num.indexOf(num);\n    return (\n      <div key={num} className=\"form-check form-check-inline\">\n        <input\n          className=\"form-check-input\"\n          type=\"checkbox\"\n          name=\"num\"\n          value={num}\n          checked={checked !== -1 ? true : false}\n          id={\"input\" + num}\n          onChange={this.props.onChange}\n        />\n        <label className=\"form-check-label\" htmlFor={\"input\" + num}>\n          {num}\n        </label>\n      </div>\n    );\n  }\n\n  renderSkils(val, key) {\n    console.log(this.props.selected.skils[key] === true);\n    return (\n      <div key={key} className=\"form-check form-check-inline\">\n        <input\n          className=\"form-check-input\"\n          type=\"checkbox\"\n          name={key}\n          value={true}\n          checked={this.props.selected.skils[key] === true ? true : false}\n          id={\"input\" + key}\n          onChange={this.props.onChange}\n        />\n        <label className=\"form-check-label\" htmlFor={\"input\" + key}>\n          {val}\n        </label>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.props.onSubmit}>\n          <div className=\"row\">\n            <div className=\"col\">\n              {this.state.num.map((num) => this.renderNumber(num))}\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">\n              {Object.keys(this.state.skils).map((key) =>\n                this.renderSkils(this.state.skils[key], key)\n              )}\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">\n              <input type=\"submit\" className=\"btn btn-primary\" value=\"Start\" />\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { reactLocalStorage } from \"reactjs-localstorage\";\n\nexport default class Quiz extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.initialState;\n    for (let index = 0; index < 10; index++) {\n      this.generateQuestion();\n    }\n  }\n\n  get initialState() {\n    return {\n      questions: {},\n      wrong: {},\n      position: 0,\n      answers: [],\n      submited: false,\n      correctAnswer: \"\",\n      correctAnswerState: \"success\",\n      done: false,\n    };\n  }\n\n  reload(event) {\n    this.setState(this.initialState);\n    for (let index = 0; index < 10; index++) {\n      this.generateQuestion();\n    }\n    event.preventDefault();\n  }\n\n  handleChange(event) {\n    let answers = this.state.answers;\n    answers[this.state.position] = Number(event.target.value);\n    this.setState(answers);\n  }\n\n  handleSubmit(event) {\n    const state = this.state;\n    const questions = state.questions;\n    let wrong = state.wrong;\n    const answers = state.answers;\n    const position = state.position;\n\n    if (Object.keys(questions).length > position) {\n      const key = Object.keys(questions)[position];\n      const q = questions[key];\n      let timeout = 300;\n      this.setState({\n        submited: true,\n      });\n      q.date = new Date().toISOString().slice(0, 10);\n\n      if (this.evaluate(q, answers[position])) {\n        let lsCorrect = reactLocalStorage.getObject(\"correct\", []);\n        lsCorrect.push(q);\n        reactLocalStorage.setObject(\"correct\", lsCorrect);\n\n        this.setState({\n          correctAnswer: \"Správně\",\n          correctAnswerState: \"success\",\n        });\n        timeout = 100;\n      } else {\n        let corect = this.getCorrectAnswer(q);\n        let lsWrong = reactLocalStorage.getObject(\"wrong\", []);\n        lsWrong.push(q);\n        reactLocalStorage.setObject(\"wrong\", lsWrong);\n\n        wrong[key] = q;\n\n        this.setState({\n          correctAnswer: \"Správná odpověď je \" + corect,\n          correctAnswerState: \"danger\",\n          wrong,\n        });\n      }\n\n      setTimeout(\n        () =>\n          this.setState({\n            position: position + 1,\n            submited: false,\n          }),\n        timeout\n      );\n    }\n    if (Object.keys(questions).length === position + 1) {\n      this.setState({ done: true });\n    }\n\n    event.preventDefault();\n  }\n\n  evaluate(question, answer) {\n    const correct = this.getCorrectAnswer(question);\n    return correct === answer;\n  }\n\n  getCorrectAnswer(question) {\n    if (question.method === \"nas\" && question.side === \"right\") {\n      return question.num1 * question.num2;\n    }\n    if (question.first) {\n      return question.num2;\n    }\n    return question.num1;\n  }\n\n  generateQuestion() {\n    const num = this.props.num;\n    const nas = this.props.nas;\n    const del = this.props.del;\n    const sides = [\"left\", \"right\"];\n    const methods = [\"nas\", \"del\"];\n    let usedQuestions = this.state.questions;\n\n    let num1 = 1;\n    let num2 = 1;\n    let side = \"left\";\n    let method = \"nas\";\n    let first = true;\n\n    if (Object.keys(usedQuestions).length <= 10) {\n      num1 = Math.floor(Math.random() * 11);\n      num2 = num[Math.floor(Math.random() * num.length)];\n      side = sides[Math.floor(Math.random() * sides.length)];\n      first = Math.floor(Math.random() * 1000) % 2 === 0 ? true : false;\n      method = nas ? \"nas\" : \"del\";\n\n      if (num2 === 0) {\n        num2 = num[0];\n      }\n\n      if (nas && del) {\n        method = methods[Math.floor(Math.random() * methods.length)];\n      }\n\n      const key = method + \"|\" + side + \"|\" + first + \"|\" + num1 + \"|\" + num2;\n      if (usedQuestions[key]) {\n        this.generateQuestion();\n      }\n      usedQuestions[key] = {\n        num1,\n        num2,\n        method,\n        side,\n        first,\n      };\n      this.setState({ questions: usedQuestions });\n    }\n  }\n\n  renderQuestion() {\n    const position = this.state.position;\n    const questions = this.state.questions;\n    const submited = this.state.submited;\n    const correctAnswer = this.state.correctAnswer;\n    const correctAnswerState = this.state.correctAnswerState;\n    // console.log(questions);\n    const q = questions[Object.keys(questions)[position]];\n    const num1 = q.num1;\n    const num2 = q.num2;\n    const side = q.side;\n    const method = q.method;\n    const first = q.first;\n    return (\n      <>\n        <div className=\"row quiz\">\n          <div className=\"col\">\n            {method === \"nas\"\n              ? this.renderMultiplication(num1, num2, side, first)\n              : this.renderDivade(num1, num2, side, first)}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            {!submited ? (\n              <input\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                value=\"Zkontrolovat\"\n              />\n            ) : (\n              <div className={\"alert alert-\" + correctAnswerState}>\n                {correctAnswer}\n              </div>\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  renderMultiplication(num1, num2, side, first) {\n    const key = \"nas|\" + side + \"|\" + first + \"|\" + num1 + \"|\" + num2;\n    return side === \"left\" ? (\n      <h2>\n        {first ? num1 : num2} *\n        <input\n          key={key}\n          type=\"number\"\n          name=\"num\"\n          min=\"0\"\n          max=\"10\"\n          step=\"1\"\n          required\n          autoFocus\n          onChange={(e) => this.handleChange(e)}\n        />{\" \"}\n        ={num1 * num2}\n      </h2>\n    ) : (\n      <h2>\n        {num1} * {num2} =\n        <input\n          key={key}\n          type=\"number\"\n          name=\"num\"\n          min=\"0\"\n          step=\"1\"\n          required\n          autoFocus\n          onChange={(e) => this.handleChange(e)}\n        />\n      </h2>\n    );\n  }\n\n  renderDivade(num1, num2, side, first) {\n    const key = \"del|\" + side + \"|\" + first + \"|\" + num1 + \"|\" + num2;\n    const total = num1 * num2;\n    return side === \"left\" ? (\n      <h2>\n        {total} :\n        <input\n          key={key}\n          type=\"number\"\n          name=\"num\"\n          min=\"0\"\n          max=\"10\"\n          step=\"1\"\n          required\n          autoFocus\n          onChange={(e) => this.handleChange(e)}\n        />{\" \"}\n        ={first ? num1 : num2}\n      </h2>\n    ) : (\n      <h2>\n        {total} : {first ? num1 : num2} =\n        <input\n          key={key}\n          type=\"number\"\n          name=\"num\"\n          min=\"0\"\n          step=\"1\"\n          required\n          autoFocus\n          onChange={(e) => this.handleChange(e)}\n        />\n      </h2>\n    );\n  }\n\n  renderViewMultiplication(num1, num2, side, first) {\n    const total = num1 * num2;\n    const key = \"nas|\" + side + \"|\" + first + \"|\" + num1 + \"|\" + num2;\n    return side === \"left\" ? (\n      <h3 key={key}>\n        {first ? num1 : num2} *<strong>{first ? num2 : num1}</strong> =\n        {num1 * num2}\n      </h3>\n    ) : (\n      <h3 key={key}>\n        {num1} * {num2} =<strong>{total}</strong>\n      </h3>\n    );\n  }\n\n  renderViewDivade(num1, num2, side, first) {\n    const key = \"del|\" + side + \"|\" + first + \"|\" + num1 + \"|\" + num2;\n    const total = num1 * num2;\n    return side === \"left\" ? (\n      <h3 key={key}>\n        {total} : <strong>{first ? num2 : num1}</strong> ={first ? num1 : num2}\n      </h3>\n    ) : (\n      <h3 key={key}>\n        {total} : {first ? num1 : num2} =<strong>{first ? num2 : num1}</strong>\n      </h3>\n    );\n  }\n\n  renderWrong(wrong) {\n    const items = Object.keys(wrong);\n    return items.map((key) => {\n      const w = wrong[key];\n      return w.method === \"nas\"\n        ? this.renderViewMultiplication(w.num1, w.num2, w.side, w.first)\n        : this.renderViewDivade(w.num1, w.num2, w.side, w.first);\n    });\n  }\n\n  renderSummary() {\n    const questions = this.state.questions;\n    const wrong = this.state.wrong;\n\n    const countQ = Object.keys(questions).length;\n    const countW = Object.keys(wrong).length;\n\n    return (\n      <>\n        <div className=\"row justify-content-around\">\n          <div className=\"col\">\n            <div className=\"btn btn-success\">\n              Správně{\" \"}\n              <span className=\"badge badge-light\">{countQ - countW}</span>\n            </div>\n          </div>\n          <div className=\"col\">\n            <div className=\"btn btn-danger\">\n              Chybně <span className=\"badge badge-light\">{countW}</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">{this.renderWrong(wrong)}</div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <button className=\"btn btn-primary\" onClick={(e) => this.reload(e)}>\n              Začít znovu\n            </button>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  render() {\n    const total = Object.keys(this.state.questions).length;\n    const wrong = Object.keys(this.state.wrong).length;\n    const position = this.state.position;\n    const done = this.state.done;\n    const progress = ((position + 1 - wrong) / total) * 100 + \"%\";\n    const progressWrong = (wrong / total) * 100 + \"%\";\n    return (\n      <div>\n        {done ? (\n          this.renderSummary()\n        ) : (\n          <>\n            <div className=\"progress\">\n              <div\n                className=\"progress-bar bg-info\"\n                role=\"progressbar\"\n                style={{ width: progress }}\n              >\n                {position + 1 - wrong} / {total}\n              </div>\n              <div\n                className=\"progress-bar bg-danger\"\n                role=\"progressbar\"\n                style={{ width: progressWrong }}\n              >\n                {wrong} / {total}\n              </div>\n            </div>\n            <form onSubmit={(e) => this.handleSubmit(e)} autoComplete=\"off\">\n              {this.renderQuestion()}\n            </form>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Start from \"./Start.js\";\nimport Quiz from \"./Quiz.js\";\nimport { reactLocalStorage } from \"reactjs-localstorage\";\n\nexport default class Root extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: { num: [1, 2, 3, 4], skils: { nas: true, del: true } },\n      submited: false,\n      error: \"\",\n    };\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    let selected = this.state.selected;\n    if (name === \"num\") {\n      if (target.checked) {\n        selected.num.push(Number(value));\n      } else {\n        var index = selected.num.indexOf(Number(target.value));\n        if (index !== -1) {\n          selected.num.splice(index, 1);\n        }\n      }\n    } else {\n      selected.skils[name] = target.checked;\n    }\n    this.setState({ selected });\n  }\n\n  handleSubmit(event) {\n    const selected = this.state.selected;\n\n    if (selected.num.length > 0 && (selected.skils.nas || selected.skils.del)) {\n      this.setState({ submited: true });\n    } else {\n      this.setState({\n        error: \"Vyber alespoň jedno číslo a zvol násobení nebo dělení.\",\n      });\n    }\n\n    event.preventDefault();\n  }\n\n  renderStart() {\n    return (\n      <Start\n        onChange={(e) => this.handleChange(e)}\n        onSubmit={(e) => this.handleSubmit(e)}\n        selected={this.state.selected}\n      />\n    );\n  }\n\n  renderQuiz() {\n    return (\n      <Quiz\n        num={this.state.selected.num}\n        nas={this.state.selected.skils.nas}\n        del={this.state.selected.skils.del}\n      />\n    );\n  }\n\n  renderStat(stat) {\n    const nasArray = stat.nas;\n    const delArray = stat.del;\n    const nas = Object.keys(nasArray);\n    const del = Object.keys(delArray);\n    console.log(nas);\n    return (\n      <>\n        <div class=\"row\">\n          <div class=\"col\">\n            <h5>Násobilka</h5>\n            {nas.map((i) => (\n              <p>\n                Násobilka {i}: {nasArray[i]}x\n              </p>\n            ))}\n          </div>\n          <div class=\"col\">\n            <h5>Dělení</h5>\n            {del.map((i) => (\n              <p>\n                Dělení {i}: {delArray[i]}x\n              </p>\n            ))}\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  renderStats() {\n    const wrong = reactLocalStorage.getObject(\"wrong\", []);\n    const correct = reactLocalStorage.getObject(\"correct\", []);\n    let statsC = { nas: {}, del: {} };\n    let statsW = { nas: {}, del: {} };\n\n    correct.map(\n      (elm) =>\n        (statsC[elm.method][elm.num2] = statsC[elm.method][elm.num2]\n          ? statsC[elm.method][elm.num2] + 1\n          : 1)\n    );\n    wrong.map(\n      (elm) =>\n        (statsW[elm.method][elm.num2] = statsW[elm.method][elm.num2]\n          ? statsW[elm.method][elm.num2] + 1\n          : 1)\n    );\n\n    return (\n      <>\n        <div className=\"alert alert-success\">\n          <h4 className=\"alert-heading\">Správně</h4>\n          {this.renderStat(statsC)}\n        </div>\n        <div className=\"alert alert-danger\">\n          <h4 className=\"alert-heading\">Chybně</h4>\n          {this.renderStat(statsW)}\n        </div>\n      </>\n    );\n  }\n\n  render() {\n    const submited = this.state.submited;\n    const error = this.state.error;\n    return (\n      <>\n        <div className=\"row\">\n          <div className=\"col\">\n            {error !== \"\" ? (\n              <div className=\"alert alert-danger\">{error}</div>\n            ) : (\n              \"\"\n            )}\n            {submited ? this.renderQuiz() : this.renderStart()}\n          </div>\n        </div>\n        {!submited ? (\n          <>\n            <div className=\"row\">\n              <div className=\"col\">\n                <h4>Tvoje výsledky</h4>\n              </div>\n            </div>\n            {this.renderStats()}\n          </>\n        ) : (\n          \"\"\n        )}\n      </>\n    );\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport Root from \"./Root.js\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App container\">\n      <Root />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}