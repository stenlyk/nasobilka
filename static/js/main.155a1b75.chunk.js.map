{"version":3,"sources":["Start.js","Quiz.js","Root.js","App.js","serviceWorker.js","index.js"],"names":["nums","Start","props","state","num","skils","nas","del","checked","this","selected","indexOf","key","className","type","name","value","id","onChange","htmlFor","val","onSubmit","map","renderNumber","Object","keys","renderSkils","React","Component","Quiz","initialState","generateQuestions","event","setState","setTimeout","preventDefault","answers","position","Number","target","questions","wrong","length","q","timeout","submited","date","Date","toISOString","slice","evaluate","lsCorrect","reactLocalStorage","getObject","push","setObject","correctAnswer","correctAnswerState","corect","getCorrectAnswer","lsWrong","done","question","answer","method","side","num1","num2","first","index","generateQuestion","sides","methods","usedQuestions","Math","floor","random","renderMultiplication","renderDivade","min","max","step","required","autoFocus","e","handleChange","total","w","renderViewMultiplication","renderViewDivade","countQ","countW","renderWrong","onClick","reload","progress","progressWrong","renderSummary","role","style","width","handleSubmit","autoComplete","renderQuestion","Root","error","levels","10","50","200","500","splice","points","result","elm","stats","nasArray","delArray","level","progressC","progressW","i","getLevel","Fragment","correct","today","renderStat","renderQuiz","renderStart","renderStats","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.155a1b75.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nexport default class Start extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      num: nums,\n      skils: { nas: \"Násobení\", del: \"Dělení\" },\n    };\n  }\n\n  renderNumber(num) {\n    const checked = this.props.selected.num.indexOf(num);\n    return (\n      <div key={num} className=\"form-check form-check-button\">\n        <input\n          className=\"form-check-input\"\n          type=\"checkbox\"\n          name=\"num\"\n          value={num}\n          checked={checked !== -1 ? true : false}\n          id={\"input\" + num}\n          onChange={this.props.onChange}\n        />\n        <label className=\"form-check-label\" htmlFor={\"input\" + num}>\n          {num}\n        </label>\n      </div>\n    );\n  }\n\n  renderSkils(val, key) {\n    // console.log(this.props.selected.skils[key] === true);\n    return (\n      <div key={key} className=\"form-check form-check-button\">\n        <input\n          className=\"form-check-input\"\n          type=\"checkbox\"\n          name={key}\n          value={true}\n          checked={this.props.selected.skils[key] === true ? true : false}\n          id={\"input\" + key}\n          onChange={this.props.onChange}\n        />\n        <label className=\"form-check-label\" htmlFor={\"input\" + key}>\n          {val}\n        </label>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"start\">\n        <form onSubmit={this.props.onSubmit}>\n          <div className=\"row\">\n            <div className=\"col\">\n              {this.state.num.map((num) => this.renderNumber(num))}\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">\n              {Object.keys(this.state.skils).map((key) =>\n                this.renderSkils(this.state.skils[key], key)\n              )}\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">\n              <input\n                type=\"submit\"\n                className=\"btn btn-success btn-lg\"\n                value=\"    Začít počítat    \"\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { reactLocalStorage } from \"reactjs-localstorage\";\n\nexport default class Quiz extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.initialState;\n  }\n\n  get initialState() {\n    return {\n      questions: {},\n      wrong: {},\n      position: 0,\n      answers: [],\n      submited: false,\n      correctAnswer: \"\",\n      correctAnswerState: \"success\",\n      done: false,\n    };\n  }\n\n  componentDidMount() {\n    this.generateQuestions();\n  }\n\n  reload(event) {\n    this.setState(this.initialState);\n    setTimeout(() => {\n      this.generateQuestions();\n    }, 100);\n    event.preventDefault();\n  }\n\n  handleChange(event) {\n    let answers = this.state.answers;\n    answers[this.state.position] = Number(event.target.value);\n    this.setState({ answers });\n  }\n\n  handleSubmit(event) {\n    const state = this.state;\n    const questions = state.questions;\n    let wrong = state.wrong;\n    const answers = state.answers;\n    const position = state.position;\n\n    if (Object.keys(questions).length > position) {\n      const key = Object.keys(questions)[position];\n      const q = questions[key];\n      let timeout = 3000;\n      this.setState({\n        submited: true,\n      });\n      q.date = new Date().toISOString().slice(0, 10);\n\n      if (this.evaluate(q, answers[position])) {\n        let lsCorrect = reactLocalStorage.getObject(\"correct\", []);\n        lsCorrect.push(q);\n        reactLocalStorage.setObject(\"correct\", lsCorrect);\n\n        this.setState({\n          correctAnswer: \"Správně\",\n          correctAnswerState: \"success\",\n        });\n        timeout = 1000;\n      } else {\n        let corect = this.getCorrectAnswer(q);\n        let lsWrong = reactLocalStorage.getObject(\"wrong\", []);\n        lsWrong.push(q);\n        reactLocalStorage.setObject(\"wrong\", lsWrong);\n\n        wrong[key] = q;\n\n        this.setState({\n          correctAnswer: \"Správná odpověď je \" + corect,\n          correctAnswerState: \"danger\",\n          wrong,\n        });\n      }\n\n      setTimeout(\n        () =>\n          this.setState({\n            position: position + 1,\n            submited: false,\n          }),\n        timeout\n      );\n    }\n    if (Object.keys(questions).length === position + 1) {\n      this.setState({ done: true });\n    }\n\n    event.preventDefault();\n  }\n\n  evaluate(question, answer) {\n    const correct = this.getCorrectAnswer(question);\n    return correct === answer;\n  }\n\n  getCorrectAnswer(question) {\n    if (question.method === \"nas\" && question.side === \"right\") {\n      return question.num1 * question.num2;\n    }\n    if (question.first) {\n      return question.num2;\n    }\n    return question.num1;\n  }\n\n  generateQuestions() {\n    for (let index = 0; index < 10; index++) {\n      this.generateQuestion();\n    }\n  }\n\n  generateQuestion() {\n    const num = this.props.num;\n    const nas = this.props.nas;\n    const del = this.props.del;\n    const sides = [\"left\", \"right\"];\n    const methods = [\"nas\", \"del\"];\n    let usedQuestions = this.state.questions;\n\n    let num1 = 1;\n    let num2 = 1;\n    let side = \"left\";\n    let method = \"nas\";\n    let first = true;\n\n    if (Object.keys(usedQuestions).length < 10) {\n      num1 = Math.floor(Math.random() * 11);\n      num2 = num[Math.floor(Math.random() * num.length)];\n      side = sides[Math.floor(Math.random() * sides.length)];\n      first = Math.floor(Math.random() * 1000) % 2 === 0 ? true : false;\n      method = nas ? \"nas\" : \"del\";\n\n      if (nas && del) {\n        method = methods[Math.floor(Math.random() * methods.length)];\n      }\n\n      if (num1 === 0) {\n        side = \"right\";\n        first = false;\n      }\n\n      const key = method + \"|\" + side + \"|\" + first + \"|\" + num1 + \"|\" + num2;\n      if (usedQuestions[key]) {\n        this.generateQuestion();\n      }\n      usedQuestions[key] = {\n        num1,\n        num2,\n        method,\n        side,\n        first,\n      };\n      this.setState({ questions: usedQuestions });\n    }\n  }\n\n  renderQuestion() {\n    const position = this.state.position;\n    const questions = this.state.questions;\n    const submited = this.state.submited;\n    const correctAnswer = this.state.correctAnswer;\n    const correctAnswerState = this.state.correctAnswerState;\n    // console.log(questions);\n    const q = questions[Object.keys(questions)[position]];\n    const num1 = q.num1;\n    const num2 = q.num2;\n    const side = q.side;\n    const method = q.method;\n    const first = q.first;\n    return (\n      <>\n        <div className=\"row quiz\">\n          <div className=\"col\">\n            {method === \"nas\"\n              ? this.renderMultiplication(num1, num2, side, first)\n              : this.renderDivade(num1, num2, side, first)}\n          </div>\n        </div>\n        <div className=\"row quiz\">\n          <div className=\"col\">\n            {!submited ? (\n              <input\n                type=\"submit\"\n                className=\"btn btn-primary btn-lg\"\n                value=\"Zkontrolovat\"\n              />\n            ) : (\n              <div className={\"alert alert-\" + correctAnswerState}>\n                {correctAnswer}\n              </div>\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  renderMultiplication(num1, num2, side, first) {\n    const key = \"nas|\" + side + \"|\" + first + \"|\" + num1 + \"|\" + num2;\n    return side === \"left\" ? (\n      <h2>\n        {first ? num1 : num2} *{\" \"}\n        <input\n          key={key}\n          type=\"number\"\n          name=\"num\"\n          min=\"0\"\n          max=\"10\"\n          step=\"1\"\n          required\n          autoFocus\n          onChange={(e) => this.handleChange(e)}\n        />{\" \"}\n        ={num1 * num2}\n      </h2>\n    ) : (\n      <h2>\n        {num1} * {num2} ={\" \"}\n        <input\n          key={key}\n          type=\"number\"\n          name=\"num\"\n          min=\"0\"\n          step=\"1\"\n          required\n          autoFocus\n          onChange={(e) => this.handleChange(e)}\n        />\n      </h2>\n    );\n  }\n\n  renderDivade(num1, num2, side, first) {\n    const key = \"del|\" + side + \"|\" + first + \"|\" + num1 + \"|\" + num2;\n    const total = num1 * num2;\n    return side === \"left\" ? (\n      <h2>\n        {total} :{\" \"}\n        <input\n          key={key}\n          type=\"number\"\n          name=\"num\"\n          min=\"0\"\n          max=\"10\"\n          step=\"1\"\n          required\n          autoFocus\n          onChange={(e) => this.handleChange(e)}\n        />{\" \"}\n        ={first ? num1 : num2}\n      </h2>\n    ) : (\n      <h2>\n        {total} : {first ? num1 : num2} ={\" \"}\n        <input\n          key={key}\n          type=\"number\"\n          name=\"num\"\n          min=\"0\"\n          step=\"1\"\n          required\n          autoFocus\n          onChange={(e) => this.handleChange(e)}\n        />\n      </h2>\n    );\n  }\n\n  renderViewMultiplication(num1, num2, side, first) {\n    const total = num1 * num2;\n    const key = \"nas|\" + side + \"|\" + first + \"|\" + num1 + \"|\" + num2;\n    return side === \"left\" ? (\n      <h3 key={key}>\n        {first ? num1 : num2} *\n        <strong className=\"bg-danger\">{first ? num2 : num1}</strong> =\n        {num1 * num2}\n      </h3>\n    ) : (\n      <h3 key={key}>\n        {num1} * {num2} =<strong className=\"bg-danger\">{total}</strong>\n      </h3>\n    );\n  }\n\n  renderViewDivade(num1, num2, side, first) {\n    const key = \"del|\" + side + \"|\" + first + \"|\" + num1 + \"|\" + num2;\n    const total = num1 * num2;\n    return side === \"left\" ? (\n      <h3 key={key}>\n        {total} : <strong className=\"bg-danger\">{first ? num2 : num1}</strong> =\n        {first ? num1 : num2}\n      </h3>\n    ) : (\n      <h3 key={key}>\n        {total} : {first ? num1 : num2} =\n        <strong className=\"bg-danger\">{first ? num2 : num1}</strong>\n      </h3>\n    );\n  }\n\n  renderWrong(wrong) {\n    const items = Object.keys(wrong);\n    return items.map((key) => {\n      const w = wrong[key];\n      return w.method === \"nas\"\n        ? this.renderViewMultiplication(w.num1, w.num2, w.side, w.first)\n        : this.renderViewDivade(w.num1, w.num2, w.side, w.first);\n    });\n  }\n\n  renderSummary() {\n    const questions = this.state.questions;\n    const wrong = this.state.wrong;\n\n    const countQ = Object.keys(questions).length;\n    const countW = Object.keys(wrong).length;\n\n    return (\n      <>\n        <div className=\"row quiz justify-content-around\">\n          <div className=\"col\">\n            <div className=\"btn btn-success\">\n              Správně{\" \"}\n              <span className=\"badge badge-light\">{countQ - countW}</span>\n            </div>\n          </div>\n          <div className=\"col\">\n            <div className=\"btn btn-danger\">\n              Chybně <span className=\"badge badge-light\">{countW}</span>\n            </div>\n          </div>\n        </div>\n        {countW > 0 ? (\n          <div className=\"row quiz\">\n            <div className=\"col\">\n              <h2>Tady jsou ještě jednou tvé chybné odpovědi</h2>\n              {this.renderWrong(wrong)}\n            </div>\n          </div>\n        ) : null}\n        <div className=\"row quiz\">\n          <div className=\"col\">\n            <button\n              className=\"btn btn-primary btn-lg\"\n              onClick={(e) => this.reload(e)}\n            >\n              Začít znovu\n            </button>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  render() {\n    const total = Object.keys(this.state.questions).length;\n    const wrong = Object.keys(this.state.wrong).length;\n    const position = this.state.position;\n    const done = this.state.done;\n    const progress = ((position + 1 - wrong) / total) * 100 + \"%\";\n    const progressWrong = (wrong / total) * 100 + \"%\";\n    // console.log(this.state.questions);\n    if (total === 0) {\n      return null;\n    }\n\n    return (\n      <div>\n        {done ? (\n          this.renderSummary()\n        ) : (\n          <>\n            <div className=\"progress no-radius\">\n              <div\n                className=\"progress-bar bg-info\"\n                role=\"progressbar\"\n                style={{ width: progress }}\n              >\n                {position + 1 - wrong} / {total}\n              </div>\n              <div\n                className=\"progress-bar bg-danger\"\n                role=\"progressbar\"\n                style={{ width: progressWrong }}\n              >\n                {wrong} / {total}\n              </div>\n            </div>\n            <form onSubmit={(e) => this.handleSubmit(e)} autoComplete=\"off\">\n              {this.renderQuestion()}\n            </form>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Start, { nums } from \"./Start.js\";\nimport Quiz from \"./Quiz.js\";\nimport { reactLocalStorage } from \"reactjs-localstorage\";\n\nexport default class Root extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: { num: [1, 2, 3, 4], skils: { nas: true, del: true } },\n      submited: false,\n      error: \"\",\n      num: nums,\n      levels: { 10: \"paper\", 50: \"bronze\", 200: \"silver\", 500: \"gold\" },\n    };\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    let selected = this.state.selected;\n    if (name === \"num\") {\n      if (target.checked) {\n        selected.num.push(Number(value));\n      } else {\n        var index = selected.num.indexOf(Number(target.value));\n        if (index !== -1) {\n          selected.num.splice(index, 1);\n        }\n      }\n    } else {\n      selected.skils[name] = target.checked;\n    }\n    this.setState({ selected });\n  }\n\n  handleSubmit(event) {\n    const selected = this.state.selected;\n\n    if (selected.num.length > 0 && (selected.skils.nas || selected.skils.del)) {\n      this.setState({ submited: true });\n    } else {\n      this.setState({\n        error: \"Vyber alespoň jedno číslo a zvol násobení nebo dělení.\",\n      });\n    }\n\n    event.preventDefault();\n  }\n\n  renderStart() {\n    return (\n      <Start\n        onChange={(e) => this.handleChange(e)}\n        onSubmit={(e) => this.handleSubmit(e)}\n        selected={this.state.selected}\n      />\n    );\n  }\n\n  renderQuiz() {\n    return (\n      <Quiz\n        num={this.state.selected.num}\n        nas={this.state.selected.skils.nas}\n        del={this.state.selected.skils.del}\n      />\n    );\n  }\n\n  getLevel(points) {\n    const levels = this.state.levels;\n    const keys = Object.keys(levels);\n    let result = [\"paper\", 10];\n\n    keys.map((key, index, elm) => {\n      if (key < points) {\n        result =\n          index + 1 < keys.length\n            ? [levels[elm[index + 1]], elm[index + 1]]\n            : [levels[key], key];\n      }\n    });\n    return result;\n  }\n\n  renderStat(stats) {\n    // console.log(stats);\n    const nasArray = stats.nas;\n    const delArray = stats.del;\n\n    const num = this.state.num;\n    //console.log(this.getLevel(0));\n    let level = {};\n    let progressC = 0;\n    let progressW = 0;\n\n    return (\n      <>\n        <div className=\"row stats\">\n          <div className=\"col-md-6 col-sm-12\">\n            <h4>Násobení</h4>\n            {num.map((i) => {\n              level = this.getLevel(nasArray[i][\"correct\"]);\n              progressC = (nasArray[i][\"correct\"] / level[1]) * 100 + \"%\";\n              progressW = (nasArray[i][\"wrong\"] / level[1]) * 100 + \"%\";\n              return (\n                <React.Fragment key={i}>\n                  <div className={\"row align-items-center \" + level[0]}>\n                    <div className=\"col-2\">\n                      <div className=\"badge\">{i}</div>\n                    </div>\n                    <div className=\"col\">\n                      <div className=\"progress\">\n                        <div\n                          className=\"progress-bar\"\n                          style={{ width: progressC }}\n                        >\n                          {nasArray[i][\"correct\"]} / {level[1]}\n                        </div>\n                        <div\n                          className=\"progress-bar bg-danger\"\n                          style={{ width: progressW }}\n                        >\n                          {nasArray[i][\"wrong\"]}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </React.Fragment>\n              );\n            })}\n          </div>\n          <div className=\"col-md-6 col-sm-12\">\n            <h4>Dělení</h4>\n            {num.map((i) => {\n              level = this.getLevel(delArray[i][\"correct\"]);\n              progressC = (delArray[i][\"correct\"] / level[1]) * 100 + \"%\";\n              progressW = (delArray[i][\"wrong\"] / level[1]) * 100 + \"%\";\n              return (\n                <React.Fragment key={i}>\n                  <div className={\"row align-items-center \" + level[0]}>\n                    <div className=\"col-2\">\n                      <div className=\"badge\">{i}</div>\n                    </div>\n                    <div className=\"col\">\n                      <div className=\"progress\">\n                        <div\n                          className=\"progress-bar\"\n                          style={{ width: progressC }}\n                        >\n                          {delArray[i][\"correct\"]} / {level[1]}\n                        </div>\n                        <div\n                          className=\"progress-bar bg-danger\"\n                          style={{ width: progressW }}\n                        >\n                          {delArray[i][\"wrong\"]}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  renderStats() {\n    const num = this.state.num;\n    const wrong = reactLocalStorage.getObject(\"wrong\", []);\n    const correct = reactLocalStorage.getObject(\"correct\", []);\n    let stats = { nas: {}, del: {}, today: { nas: {}, del: {} } };\n\n    num.map((val) => {\n      stats[\"nas\"][val] = { correct: 0, wrong: 0 };\n      stats[\"del\"][val] = { correct: 0, wrong: 0 };\n      stats[\"today\"][\"nas\"][val] = { correct: 0, wrong: 0 };\n      stats[\"today\"][\"del\"][val] = { correct: 0, wrong: 0 };\n      return null;\n    });\n\n    correct.map(\n      (elm) =>\n        (stats[elm.method][elm.num2][\"correct\"] = stats[elm.method][elm.num2][\n          \"correct\"\n        ]\n          ? stats[elm.method][elm.num2][\"correct\"] + 1\n          : 1)\n    );\n    wrong.map(\n      (elm) =>\n        (stats[elm.method][elm.num2][\"wrong\"] = stats[elm.method][elm.num2][\n          \"wrong\"\n        ]\n          ? stats[elm.method][elm.num2][\"wrong\"] + 1\n          : 1)\n    );\n\n    return (\n      <>\n        {this.renderStat(stats)}\n        <hr />\n        <div className=\"row text-left align-items-center\">\n          <div className=\"col-1 paper\">\n            <div className=\"badge\">1</div>\n          </div>\n          <div className=\"col\">Začátečník</div>\n          <div className=\"col-1 bronze\">\n            <div className=\"badge\">1</div>\n          </div>\n          <div className=\"col\">Bronzová úroveň</div>\n          <div className=\"col-1 silver\">\n            <div className=\"badge\">1</div>\n          </div>\n          <div className=\"col\">Stříbrná úroveň</div>\n          <div className=\"col-1 gold\">\n            <div className=\"badge\">1</div>\n          </div>\n          <div className=\"col\">Zlatá úroveň</div>\n        </div>\n      </>\n    );\n  }\n\n  render() {\n    const submited = this.state.submited;\n    const error = this.state.error;\n    return (\n      <>\n        {!submited ? (\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col\">\n                {error !== \"\" ? (\n                  <div className=\"alert alert-danger\">{error}</div>\n                ) : (\n                  \"\"\n                )}\n                {this.renderStart()}\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col\">\n                <h4>Tvoje výsledky</h4>\n              </div>\n            </div>\n            {this.renderStats()}\n          </div>\n        ) : (\n          this.renderQuiz()\n        )}\n      </>\n    );\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport Root from \"./Root.js\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Root />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}